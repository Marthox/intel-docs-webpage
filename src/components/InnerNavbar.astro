---
import ReactiveInnerNavbar from "@components/ReactiveInnerNavbar";
import { client } from "@utils/contentful_utils";
import type { Entry } from "contentful";
import { getLangFromUrl } from "@i18n/utils";

const { key, id } = Astro.props;
const lang = getLangFromUrl(Astro.url);

const data = await client.getEntry(id, { locale: lang });

const innerNavbarCategory = data.fields.innerNavbarCategory as Entry[];
const title = data.fields.title as string;

const categoriesWithCta = await Promise.all(
    innerNavbarCategory?.map(async (category: Entry) => {
        const categoryData = await client.getEntry(category.sys.id, {
            locale: lang,
        });
        const cardsCta = categoryData.fields.cardCta as Entry[];

        const cardCta = await Promise.all(
            cardsCta.map(async (cta: Entry) => {
                const ctaData = await client.getEntry(cta.sys.id, {
                    locale: lang,
                });
                return ctaData;
            })
        );

        categoryData.fields.cardCta = cardCta;
        return categoryData;
    })
);
---

<section>
    <div>
        <h2 class="inner-title">
            {title}
        </h2>
    </div>
    {
        categoriesWithCta && categoriesWithCta.length > 0 ? (
            <ReactiveInnerNavbar data={categoriesWithCta} client:load />
        ) : null
    }
</section>
<style>
    section {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        width: 80%;
    }
    button {
        margin: 1rem;
        padding: 1rem;
        background-color: #f0f0f0;
        border: 1px solid black;
        border-radius: 5px;
    }
    .cta {
        text-decoration: none;
    }
</style>
