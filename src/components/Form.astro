---
import ReactiveForm from "@components/ReactiveForm.jsx";

import { client } from "@utils/contentful_utils";
import { documentToHtmlString } from "@contentful/rich-text-html-renderer";
import { getLangFromUrl } from "@i18n/utils";
import "dotenv/config";
import "@styles/richText.css";

const { id } = Astro.props;

const lang = getLangFromUrl(Astro.url);

const data = await client.getEntry(id, { locale: lang });
const formTitle = data.fields.formTitle;
const formDescription = data.fields.formDescription as any;

const embeddedForm = data.fields.embeddedForm;

const firebaseConfig = {
    apiKey: process.env.FIREBASE_API_KEY || "",
    authDomain: process.env.FIREBASE_AUTH_DOMAIN || "",
    projectId: process.env.FIREBASE_PROJECT_ID || "",
    storageBucket: process.env.FIREBASE_STORAGE_BUCKET || "",
    messagingSenderId: process.env.FIREBASE_MESSAGING_SENDER_ID || "",
    appId: process.env.FIREBASE_APP_ID || "",
};
---

<div class="form-container">
    <div class="rich-text-content">
        <h1>{formTitle}</h1>
        <Fragment set:html={documentToHtmlString(formDescription)} />
    </div>
    {
        embeddedForm ? (
            <Fragment set:html={embeddedForm} />
        ) : (
            <ReactiveForm
                data={data}
                firebaseConfig={firebaseConfig}
                client:load
            />
        )
    }
</div>

<style>
    .form-container {
        display: grid;
        grid-template-columns: 1fr 1fr;
        border-radius: 1em;
        gap: 1rem;
    }

    .rich-text-content {
        display: flex;
        flex-direction: column;
    }

    @media (max-width: 768px) {
        .form-container {
            padding: 20px;
            grid-template-columns: 1fr;
        }
    }
</style>
