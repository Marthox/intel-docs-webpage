---
import { type Navbar } from "@interfaces/navbar";
import BannerCta from "@components/BannerCta.astro";
import { getLangFromUrl } from "@i18n/utils";
import Logo from "@components/Logo.astro";

import inteldocs_logo from "@assets/inteldocs_logo.svg?raw";

const cta = {
    fields: {
        id: 1,
        text: "Request a demo",
        url: "/en/home",
    },
};

const lang = getLangFromUrl(Astro.url);

const dummyNavDict = {
    solutions: {
        by_use_case: {
            "employee-file-management": `/en/${lang}/employee-file-management`,
            "automated-invoice-processing": `/en/${lang}/automated-invoice-processing`,
            "secure-document-archiving": `/en/${lang}/secure-document-archiving`,
            "document-management": `/en/${lang}/document-management`,
            "contract-management": `/en/${lang}/contract-management`,
        },
        by_industry: {
            "employee-file-management": `/en/${lang}/employee-file-management`,
            "automated-invoice-processing": `/en/${lang}/automated-invoice-processing`,
            "secure-document-archiving": `/en/${lang}/secure-document-archiving`,
            "document-management": `/en/${lang}/document-management`,
            "contract-management": `/en/${lang}/contract-management`,
        },
        by_department: {
            manufacturing: `/en/${lang}/manufacturing`,
            "state-and-goverment": `/en/${lang}/state-and-goverment`,
            "insurance-mutuals": `/en/${lang}/insurance-mutuals`,
            services: `/en/${lang}/services`,
        },
    },
    products: {
        the_platform: {
            "on-premises": `/en/${lang}/on-premises`,
            cincom: `/en/${lang}/cincom`,
        },
        capabilities: {
            "content-capture": `/en/${lang}/content-capture`,
            "electronic-safe": `/en/${lang}/electronic-safe`,
            workflow: `/en/${lang}/workflow`,
            archiving: `/en/${lang}/archiving`,
            indexing: `/en/${lang}/indexing`,
            "expand-ecm": `/en/${lang}/expand-ecm`,
            "electronic-signature": `/en/${lang}/electronic-signature`,
            "robust-search": `/en/${lang}/robust-search`,
        },
        integration: {
            "teams-integration": `/en/${lang}/teams-integration`,
            "email-integration": `/en/${lang}/email-integration`,
            "data-integration": `/en/${lang}/data-integration`,
            "office-integration": `/en/${lang}/office-integration`,
        },
    },
    resources: {
        our_resources: {
            ebook: `/en/${lang}/ebook`,
            "case-studies": `/en/${lang}/case-studies`,
            glossary: `/en/${lang}/glossary`,
        },
    },
    company: {
        "about-us": {
            "who-we-are": `/en/${lang}/who-we-are`,
            "about-ecm": `/en/${lang}/about-ecm`,
            "client-testimonials": `/en/${lang}/client-testimonials`,
            contact: `/en/${lang}/contact`,
        },
    },
    partners: {
        "our-partners": {
            "become-a-partner": `/en/${lang}/become-a-partner`,
            evaluate: `/en/${lang}/evaluate`,
        },
    },
};

const navDict: Navbar = dummyNavDict;
---

<head>
    <link
        rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css"
        integrity="sha384-4LISF5TTJX/fLmGSxO53rV4miRxdg84mZsxmO8Rx5jGtp/LbrixFETvWa5a6sESd"
        crossorigin="anonymous"
    />
</head>

<nav class="navbar">
    <a href="/en/home">
        <Logo
            css_class="header_logo"
            logo={inteldocs_logo}
            alt="IntelDocs Logo"
        />
    </a>
    <label for="menu-toggle"></label>
    <ul>
        {
            Object.keys(navDict).map((category) => (
                <li class="dropdown-container">
                    <button class="drop">
                        {`${category.charAt(0).toUpperCase()}${category.slice(1).toLowerCase()}`}
                        <i class="bi bi-chevron-down" />
                    </button>
                    <div class="dropdown">
                        {Object.keys(navDict[category]).map((subCategory) => (
                            <div class="dropdown-column">
                                <h4>
                                    {subCategory
                                        .replace(/_/g, " ")
                                        .replace(/\b\w/g, (char) =>
                                            char.toUpperCase()
                                        )}
                                </h4>
                                {Object.keys(
                                    navDict[category][subCategory]
                                ).map((item) => (
                                    <a
                                        href={
                                            navDict[category][subCategory][item]
                                        }
                                    >
                                        {item
                                            .replace(/-/g, " ")
                                            .replace(/\b\w/g, (char) =>
                                                char.toUpperCase()
                                            )}
                                    </a>
                                ))}
                            </div>
                        ))}
                    </div>
                </li>
            ))
        }
    </ul>
    {cta?.fields && <BannerCta data={cta} key={1} css_class="navbar-button" />}
</nav>

<style>
    .navbar {
        background-color: white;
        padding: 35px;
        position: sticky;
        top: 0;
        z-index: 2;
        font-size: 18px;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        gap: 4rem;
    }
    .navbar ul {
        list-style: none;
        padding: 0;
        display: flex;
        white-space: nowrap;
    }
    .navbar li {
        margin-right: 10px;
        position: relative;
    }
    .navbar a {
        color: black;
        text-decoration: none;
        padding: 10px;
        display: block;
    }
    .navbar a:hover {
        background-color: #e9f3fd;
    }
    .drop {
        padding: 10px 25px;
        border-radius: 12px;
        background-color: white;
        border: 1px solid transparent;
        cursor: pointer;
        transition: background-color 0.3s ease;
    }
    .drop i {
        transition: transform 0.3s ease-in-out;
        margin-left: 10px;
        display: inline-block;
    }
    .drop:focus {
        pointer-events: none;
    }
    .drop:focus ~ .dropdown {
        top: calc(100% + 10px);
        opacity: 1;
        pointer-events: auto;
    }
    .drop:focus i {
        transform: rotate(180deg);
    }
    .dropdown-container {
        position: relative;
    }
    .dropdown {
        position: absolute;
        top: calc(100% + 10px);
        width: auto;
        border-radius: 10px;
        transition: opacity 0.3s ease-in-out;
        opacity: 0;
        pointer-events: none;
        padding: 20px;
        background: #f8f8f8;
        display: flex;
        flex-direction: row;
        gap: 30px;
    }
    .dropdown-column {
        margin-right: 30px;
    }
    .dropdown-column h4 {
        margin-bottom: 15px;
        font-size: 20px;
        font-weight: 500;
        white-space: nowrap;
        color: var(--primaryColorOne);
    }
    .dropdown a {
        text-decoration: none;
        border-radius: 5px;
        user-select: none;
        font-size: 16px;
        cursor: pointer;
        display: block;
        width: 80%;
        color: black;
        font-weight: 400;
        transition: background-color 0.2s;
    }
    .dropdown a:hover {
        background-color: #e9f3fd;
        color: black;
    }
    .dropdown-container:focus-within .drop {
        color: var(--primaryColorOne);
        background-color: #e9f3fd;
    }
    button:hover {
        background-color: #e9f3fd;
    }
</style>
