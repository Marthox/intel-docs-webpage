---
import { client } from "@utils/contentful_utils";
import type { Entry } from "contentful";

const { key, id } = Astro.props;

const data = await client.getEntry(id);

const ctas_arr = data.fields.ctas as Entry[];

const { title: title } = data.fields;

const ctas = await Promise.all(
    ctas_arr.map(async (cta: { sys: { id: string } }) => {
        const ctaId = cta.sys.id;
        const ctaData = await client.getEntry(ctaId);
        return ctaData;
    })
);
---

<section class="banner-content">
    <div class="banner-text">
        <h2>{title}</h2>
        <div class="cta-container">
            {
                ctas.map((cta) => {
                    const text = cta.fields.text as string;
                    const url = cta.fields.url as string;
                    return (
                        <button>
                            <a href={url} class="cta">
                                {text}
                            </a>
                        </button>
                    );
                })
            }
        </div>
    </div>
</section>

<style>
    .banner-content {
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 2rem;
        background-color: var(--secondaryColorOne);
        width: 80%;
    }

    .banner-text {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
    }

    .cta-container {
        display: flex;
        flex-wrap: wrap; /* Permite que los botones se ajusten en varias líneas si hay muchos */
        gap: 1rem; /* Espacio entre botones */
        justify-content: center;
        margin-top: 1.5rem; /* Espacio entre los CTAs y el título */
    }

    .cta {
        display: inline-block;
        padding: 24px 48px;
        border-radius: 12px;
        background-color: #d6f2ff;
        border: 1px solid transparent;
        cursor: pointer;
        color: var(--primaryColorOne);
        text-decoration: none;
        width: 250px;
        font-weight: bold;
        transition:
            background-color 0.3s ease,
            color 0.3s ease,
            box-shadow 0.3s ease;
        position: relative;
        overflow: hidden;
    }

    .cta:hover {
        background-color: var(--primaryColorOne);
        color: white;
        box-shadow:
            0 0 20px rgba(0, 172, 255, 0.5),
            0 0 30px rgba(0, 172, 255, 0.3);
    }

    .cta::before {
        content: "";
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: rgba(255, 255, 255, 0.3);
        border-radius: 50%;
        transform: translate(-50%, -50%);
        transition:
            width 0.4s ease,
            height 0.4s ease;
        z-index: 0;
    }

    .cta:hover::before {
        width: 250%;
        height: 250%;
    }

    button {
        border: none;
        background: none;
        padding: 0;
    }
</style>
