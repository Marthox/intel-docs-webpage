---
import type { GetStaticPaths } from "astro";
import type { Entry } from "contentful";

import { client } from "@utils/contentful_utils";
import Layout from "@layouts/Layout.astro";

import HeroBanner from "@components/HeroBanner.astro";
import EventBanner from "@components/EventBanner.astro";
import PageBanner from "@components/PageBanner.astro";
import BlogCarrousel from "@components/BlogCarrousel.astro";
import InnerNavbar from "@components/InnerNavbar.astro";
import GetInTouchBanner from "@components/GetInTouchBanner.astro";
import CommentContainer from "@components/CommentContainer.astro";
import TextBanner from "@components/TextBanner.astro";

import { getPages, getContentType } from "@utils/contentful_utils";

export const prerender = true;

export const getStaticPaths = (() => {
    return getPages("fr");
}) satisfies GetStaticPaths;

const { page_data } = Astro.props;

const elementTypes = {
    heroBanner: HeroBanner,
    pageBanner: PageBanner,
    eventBanner: EventBanner,
    blogContainer: BlogCarrousel,
    innerNavbar: InnerNavbar,
    getInTouchBanner: GetInTouchBanner,
    commentContainer: CommentContainer,
    textBanner: TextBanner,
};

// const page_data = await client.getEntry(page_id);

const page_id = page_data.sys.id as string;
const locale = page_data.sys.locale as string;
const tabTitle = page_data.fields.tabTitle as string;

const heroBanner = page_data.fields.heroBanner as Entry;

const pageElements = page_data.fields.pageElements as Array<Entry>;
---

<Layout title={tabTitle} lang={locale} page_id={page_id}>
    {heroBanner ? <HeroBanner id={heroBanner.sys.id} /> : null}

    {
        Array.isArray(pageElements) && pageElements.length > 0
            ? pageElements.map((element: Entry, index: number) => {
                  const elementId = element.sys.id as string;
                  const contentType = getContentType(element);
                  const ElementType =
                      elementTypes[contentType as keyof typeof elementTypes];
                  return ElementType ? (
                      <ElementType key={index} id={elementId} />
                  ) : null;
              })
            : null
    }
</Layout>
