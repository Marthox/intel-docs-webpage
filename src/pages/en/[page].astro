---
import type { GetStaticPaths } from "astro";
import type { Entry } from "@interfaces/entry";

import Layout from "@layouts/Layout.astro";

import HeroBanner from "@components/HeroBanner.astro";
import EventBanner from "@components/EventBanner.astro";
import PageBanner from "@components/PageBanner.astro";
import BlogCarrousel from "@components/BlogCarrousel.astro";
import InnerNavbar from "@components/InnerNavbar.astro";
import GetInTouchBanner from "@components/GetInTouchBanner.astro";
import CommentContainer from "@components/CommentContainer.astro";
import TextBanner from "@components/TextBanner.astro";

import { getPages, getContentType } from "@utils/contentful_utils";

export const prerender = true;

export const getStaticPaths = (() => {
    return getPages();
}) satisfies GetStaticPaths;

const { page_data } = Astro.props;

const elementTypes = {
    pageBanner: PageBanner,
    heroBanner: HeroBanner,
    eventBanner: EventBanner,
    blogContainer: BlogCarrousel,
    innerNavbar: InnerNavbar,
    getInTouchBanner: GetInTouchBanner,
    commentContainer: CommentContainer,
    textBanner: TextBanner,
};

const {
    sys: { locale: locale, id: page_id },
    fields: {
        tabTitle: tab_title,
        heroBanner: heroBanner,
        pageElements: pageElements,
    },
} = page_data;
---

<Layout title={tab_title} lang={locale} page_id={page_id}>
    {heroBanner ? <HeroBanner data={heroBanner} /> : null}

    {
        pageElements && pageElements.length > 0
            ? pageElements.map((element: object, index: number) => {
                  const contentType = getContentType(element as Entry);
                  const ElementType =
                      elementTypes[contentType as keyof typeof elementTypes];
                  return ElementType ? (
                      <ElementType key={index} data={element} />
                  ) : null;
              })
            : null
    }
</Layout>
